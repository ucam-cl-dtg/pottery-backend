<?xml version="1.0" encoding="UTF-8"?>
<!--

    pottery-backend - Backend API for testing programming exercises
    Copyright Â© 2015-2018 BlueOptima Limited, Andrew Rice (acr31@cam.ac.uk)

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->

<!-- Available names are defined in uk.ac.cam.cl.dtg.teaching.pottery.config.ContextKeys -->
<Context path="/">

    <!-- location on local disk of parent directory for all pottery data and temp storage -->
    <Parameter name="localStoragePrefix" value="/opt/pottery"/>

    <!-- boolean to indicate if we should use the container reuse implementation or create a new container for every
    execution -->
    <Parameter name="reuseContainers" value="true"/>

    <!-- connection details to the docker API -->
    <Parameter name="dockerApiServer" value="localhost"/>
    <Parameter name="dockerApiPort" value="2375"/>

    <!-- integer maximum number of simultaneous connections to permit to the docker API. This should be larger than the
    number of threads in your worker pool. -->
    <Parameter name="dockerApiMaxConnections" value="10"/>

    <!-- boolean to enable parsing a md5sum from the end of the container output and checking that the remaining output
    matches it. Outputs without an md5sum or with a mismatch will be retried automatically. This requires support in the
    container images. Enabling this setting without updating your container images will mean that every execution will
    be retried and eventually fail. -->
    <Parameter name="dockerMd5sumContainerOutput" value="true"/>

    <!-- integer for the initial number of threads to use in the general worker pool -->
    <Parameter name="generalPoolInitialThreads" value="1"/>

    <!-- integer for the initial number of threads to use in the parameterisation worker pool -->
    <Parameter name="parameterisationPoolInitialThreads" value="1"/>

    <!-- integer multiplier to apply to container timeouts. If you run with a large number of threads in the worker pool
     then you might start to increase the time containers take to run due to resource contention. This flag can be used
     to scale all container timeouts by a fixed multiplier. -->
    <Parameter name="containerTimeoutMultiplier" value="1"/>
</Context>
